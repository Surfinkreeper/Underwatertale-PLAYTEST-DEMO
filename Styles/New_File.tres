[gd_resource type="Resource" script_class="DialogicStyle" load_steps=46 format=4 uid="uid://em870bl48lf3"]

[ext_resource type="Texture2D" uid="uid://cnom5ypt862l4" path="res://Dialogue/style/bubbles/IMG_0603.PNG" id="1_r2sc0"]


[sub_resource type="GDScript" id="GDScript_5fbhy"]
script/source = "@tool
class_name DialogicStyleLayer
extends Resource

@export var scene: PackedScene = null
@export var overrides := {}


func _init(scene_path:Variant=null, scene_overrides:Dictionary={}):
	if scene_path is PackedScene:
		scene = scene_path
	elif scene_path is String and ResourceLoader.exists(scene_path):
		scene = load(scene_path)
	overrides = scene_overrides
"

[sub_resource type="Resource" id="Resource_bicms"]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_5fbhy")
overrides = {}

[sub_resource type="GDScript" id="GDScript_3yoo6"]
script/source = "@tool
extends DialogicLayoutLayer
"

[sub_resource type="GDScript" id="GDScript_kpmrj"]
script/source = "class_name DialogicNode_BackgroundHolder
extends ColorRect


func _ready() -> void:
	add_to_group('dialogic_background_holders')
"

[sub_resource type="PackedScene" id="PackedScene_esihu"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("BackgroundLayer", "Control", "layout_direction", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "script", "DialogicNode_BackgroundHolder", "ColorRect", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "mouse_filter", "color", "script"),
"node_count": 2,
"node_paths": [NodePath(".")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 8, 2, 0, 3, 1, 4, 2, 5, 3, 6, 4, 7, 5, 8, 6, 9, 7, 0, 1073741824, 0, 11, 10, -1, 9, 12, 8, 13, 9, 14, 10, 15, 11, 16, 12, 17, 13, 18, 14, 19, 15, 20, 16, 0),
"variants": [2, 3, 15, 1.0, 1.0, 2, 2, SubResource("GDScript_3yoo6"), 1, 15, 1.0, 1.0, 2, 2, 2, Color(1, 1, 1, 0), SubResource("GDScript_kpmrj")],
"version": 3
}

[sub_resource type="Resource" id="Resource_nketx"]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_5fbhy")
scene = SubResource("PackedScene_esihu")
overrides = {}

[sub_resource type="GDScript" id="GDScript_xkb1l"]
script/source = "@tool
extends DialogicLayoutLayer

## A layer that holds a full-screen input catcher.
"

[sub_resource type="GDScript" id="GDScript_a1w6y"]
script/source = "class_name DialogicNode_Input
extends Control

## A node that handles mouse input. This allows limiting mouse input to a
## specific region and avoiding conflicts with other UI elements.
## If no Input node is used, the input subsystem will handle mouse input instead.

func _ready() -> void:
	add_to_group('dialogic_input')
	gui_input.connect(_on_gui_input)


func _input(_event: InputEvent) -> void:
	if Input.is_action_pressed(ProjectSettings.get_setting('dialogic/text/input_action', 'dialogic_default_action')):
		mouse_filter = Control.MOUSE_FILTER_STOP
	else:
		mouse_filter = Control.MOUSE_FILTER_IGNORE


func _on_gui_input(event:InputEvent) -> void:
	DialogicUtil.autoload().Inputs.handle_node_gui_input(event)
"

[sub_resource type="PackedScene" id="PackedScene_8prjr"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("FullAdvanceInputLayer", "Control", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "mouse_filter", "script", "DialogicNode_Input", "Control", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "mouse_filter", "script"),
"node_count": 2,
"node_paths": [NodePath(".")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 8, 2, 0, 3, 1, 4, 2, 5, 3, 6, 4, 7, 5, 8, 6, 9, 7, 0, 1073741824, 0, 11, 10, -1, 8, 12, 8, 13, 9, 14, 10, 15, 11, 16, 12, 17, 13, 18, 14, 19, 15, 0),
"variants": [3, 15, 1.0, 1.0, 2, 2, 2, SubResource("GDScript_xkb1l"), 1, 15, 1.0, 1.0, 2, 2, 1, SubResource("GDScript_a1w6y")],
"version": 3
}

[sub_resource type="Resource" id="Resource_jmvei"]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_5fbhy")
scene = SubResource("PackedScene_8prjr")
overrides = {}

[sub_resource type="GDScript" id="GDScript_ty4ww"]
script/source = "@tool
extends DialogicLayoutLayer

enum Alignments {LEFT, CENTER, RIGHT}
enum LimitedAlignments {LEFT=0, RIGHT=1}

@export_group('Text')
@export_subgroup(\"Text\")
@export var text_alignment: Alignments = Alignments.LEFT
@export_subgroup('Size')
@export var text_use_global_size: bool = true
@export var text_custom_size: int = 15
@export_subgroup('Color')
@export var text_use_global_color: bool = true
@export var text_custom_color: Color = Color.WHITE
@export_subgroup('Fonts')
@export var use_global_fonts: bool = true
@export_file('*.ttf', '*.tres') var custom_normal_font: String = \"\"
@export_file('*.ttf', '*.tres') var custom_bold_font: String = \"\"
@export_file('*.ttf', '*.tres') var custom_italic_font: String = \"\"
@export_file('*.ttf', '*.tres') var custom_bold_italic_font: String = \"\"

@export_group('Name Label')
@export_subgroup(\"Color\")
enum NameLabelColorModes {GLOBAL_COLOR, CHARACTER_COLOR, CUSTOM_COLOR}
@export var name_label_color_mode: NameLabelColorModes = NameLabelColorModes.GLOBAL_COLOR
@export var name_label_custom_color: Color = Color.WHITE
@export_subgroup(\"Behaviour\")
@export var name_label_alignment: Alignments = Alignments.LEFT
@export var name_label_hide_when_no_character: bool = false
@export_subgroup(\"Font & Size\")
@export var name_label_use_global_size: bool = true
@export var name_label_custom_size: int = 15
@export var name_label_use_global_font: bool = true
@export_file('*.ttf', '*.tres') var name_label_customfont: String = \"\"

@export_group('Box')
@export_subgroup(\"Box\")
@export_file('*.tres') var box_panel: String = this_folder.path_join(\"default_stylebox.tres\")
@export var box_modulate_global_color: bool = true
@export var box_modulate_custom_color: Color = Color(0.47247135639191, 0.31728461384773, 0.16592600941658)
@export var box_size: Vector2 = Vector2(600, 160)
@export var box_distance: int = 25

@export_group('Portrait')
@export_subgroup('Portrait')
@export var portrait_stretch_factor: float = 0.3
@export var portrait_position: LimitedAlignments = LimitedAlignments.LEFT
@export var portrait_bg_modulate: Color = Color(0, 0, 0, 0.5137255191803)


## Called by dialogic whenever export overrides might change
func _apply_export_overrides() -> void:
	## FONT SETTINGS
	var dialog_text: DialogicNode_DialogText = %DialogicNode_DialogText
	dialog_text.alignment = text_alignment as DialogicNode_DialogText.Alignment

	var text_size: int = text_custom_size
	if text_use_global_size:
		text_size = get_global_setting(&'font_size', text_custom_size)

	dialog_text.add_theme_font_size_override(&\"normal_font_size\", text_size)
	dialog_text.add_theme_font_size_override(&\"bold_font_size\", text_size)
	dialog_text.add_theme_font_size_override(&\"italics_font_size\", text_size)
	dialog_text.add_theme_font_size_override(&\"bold_italics_font_size\", text_size)


	var text_color: Color = text_custom_color
	if text_use_global_color:
		text_color = get_global_setting(&'font_color', text_custom_color)
	dialog_text.add_theme_color_override(&\"default_color\", text_color)

	var normal_font: String = custom_normal_font
	if use_global_fonts and ResourceLoader.exists(get_global_setting(&'font', '') as String):
		normal_font = get_global_setting(&'font', '')

	if !normal_font.is_empty():
		dialog_text.add_theme_font_override(&\"normal_font\", load(normal_font) as Font)
	if !custom_bold_font.is_empty():
		dialog_text.add_theme_font_override(&\"bold_font\", load(custom_bold_font) as Font)
	if !custom_italic_font.is_empty():
		dialog_text.add_theme_font_override(&\"italics_font\", load(custom_italic_font) as Font)
	if !custom_bold_italic_font.is_empty():
		dialog_text.add_theme_font_override(&\"bold_italics_font\", load(custom_bold_italic_font) as Font)

	## BOX SETTINGS
	var panel: PanelContainer = %Panel
	var portrait_panel: Panel = %PortraitPanel
	if box_modulate_global_color:
		panel.self_modulate = get_global_setting(&'bg_color', box_modulate_custom_color)
	else:
		panel.self_modulate = box_modulate_custom_color
	panel.size = box_size
	panel.position = Vector2(-box_size.x/2, -box_size.y-box_distance)
	portrait_panel.size_flags_stretch_ratio = portrait_stretch_factor

	var stylebox: StyleBox = load(box_panel)
	panel.add_theme_stylebox_override(&'panel', stylebox)

	## PORTRAIT SETTINGS
	var portrait_background_color: ColorRect = %PortraitBackgroundColor
	portrait_background_color.color = portrait_bg_modulate

	portrait_panel.get_parent().move_child(portrait_panel, portrait_position)

	## NAME LABEL SETTINGS
	var name_label: DialogicNode_NameLabel = %DialogicNode_NameLabel
	if name_label_use_global_size:
		name_label.add_theme_font_size_override(&\"font_size\", get_global_setting(&'font_size', name_label_custom_size) as int)
	else:
		name_label.add_theme_font_size_override(&\"font_size\", name_label_custom_size)

	var name_label_font: String = name_label_customfont
	if name_label_use_global_font and ResourceLoader.exists(get_global_setting(&'font', '') as String):
		name_label_font = get_global_setting(&'font', '')
	if !name_label_font.is_empty():
		name_label.add_theme_font_override(&'font', load(name_label_font) as Font)

	name_label.use_character_color = false
	match name_label_color_mode:
		NameLabelColorModes.GLOBAL_COLOR:
			name_label.add_theme_color_override(&\"font_color\", get_global_setting(&'font_color', name_label_custom_color) as Color)
		NameLabelColorModes.CUSTOM_COLOR:
			name_label.add_theme_color_override(&\"font_color\", name_label_custom_color)
		NameLabelColorModes.CHARACTER_COLOR:
			name_label.use_character_color = true

	name_label.horizontal_alignment = name_label_alignment as HorizontalAlignment
	name_label.hide_when_empty = name_label_hide_when_no_character
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_dmg1w"]
bg_color = Color(0.254902, 0.254902, 0.254902, 1)
skew = Vector2(0.073, 0)
corner_radius_top_left = 3
corner_radius_top_right = 3
corner_radius_bottom_right = 3
corner_radius_bottom_left = 3

[sub_resource type="GDScript" id="GDScript_8anu2"]
script/source = "@tool
class_name DialogicNode_PortraitContainer
extends Control

## Node that defines a position for dialogic portraits and how to display portraits at that position.

enum PositionModes {
	POSITION, ## This container can be joined/moved to with the Character Event
	SPEAKER,  ## This container is joined/left automatically based on the speaker.
	}

@export var mode := PositionModes.POSITION

@export_subgroup('Mode: Position')
## The position this node corresponds to.
@export var container_ids: PackedStringArray = [\"1\"]


@export_subgroup('Mode: Speaker')
## Can be used to use a different portrait.
## E.g. \"Faces/\" would mean instead of \"happy\" it will use portrait \"Faces/happy\"
@export var portrait_prefix := ''

@export_subgroup('Portrait Placement')
enum SizeModes {
	KEEP, ## The height and width of the container have no effect, only the origin.
	FIT_STRETCH, ## The portrait will be fitted into the container, ignoring it's aspect ratio and the character/portrait scale.
	FIT_IGNORE_SCALE, ## The portrait will be fitted into the container, ignoring the character/portrait scale, but preserving the aspect ratio.
	FIT_SCALE_HEIGHT ## Recommended. The portrait will be scaled to fit the container height. A character/portrait scale of 100% means 100% container height. Aspect ratio will be preserved.
	}
## Defines how to affect the scale of the portrait
@export var size_mode: SizeModes = SizeModes.FIT_SCALE_HEIGHT :
	set(mode):
		size_mode = mode
		_update_debug_portrait_transform()

## If true, portraits will be mirrored in this position.
@export var mirrored := false :
	set(mirror):
		mirrored = mirror
		_update_debug_portrait_scene()


@export_group('Origin', 'origin')
enum OriginAnchors {TOP_LEFT, TOP_CENTER, TOP_RIGHT, LEFT_MIDDLE, CENTER, RIGHT_MIDDLE, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT}
## The portrait will be placed relative to this point in the container.
@export var origin_anchor: OriginAnchors = OriginAnchors.BOTTOM_CENTER :
	set(anchor):
		origin_anchor = anchor
		_update_debug_origin()

## An offset to apply to the origin. Rarely useful.
@export var origin_offset := Vector2() :
	set(offset):
		origin_offset = offset
		_update_debug_origin()

enum PivotModes {AT_ORIGIN, PERCENTAGE, PIXELS}
## Usually you want to rotate or scale around the portrait origin.
## For the moments where that is not the case, set the mode to PERCENTAGE or PIXELS and use [member pivot_value].
@export var pivot_mode: PivotModes = PivotModes.AT_ORIGIN
## Only has an effect when [member pivot_mode] is not AT_ORIGIN. Meaning depends on whether [member pivot_mode] is PERCENTAGE or PIXELS.
@export var pivot_value := Vector2()

@export_group('Debug', 'debug')
## A character that will be displayed in the editor, useful for getting the right size.
@export var debug_character: DialogicCharacter = null:
	set(character):
		debug_character = character
		_update_debug_portrait_scene()
@export var debug_character_portrait := \"\":
	set(portrait):
		debug_character_portrait = portrait
		_update_debug_portrait_scene()

var debug_character_holder_node: Node2D = null
var debug_character_scene_node: Node = null
var debug_origin: Sprite2D = null
var default_portrait_scene: String = DialogicUtil.get_module_path('Character').path_join(\"default_portrait.tscn\")
# Used if no debug character is specified
var default_debug_character := load(DialogicUtil.get_module_path('Character').path_join(\"preview_character.tres\"))

var ignore_resize := false


func _ready() -> void:
	match mode:
		PositionModes.POSITION:
			add_to_group('dialogic_portrait_con_position')
		PositionModes.SPEAKER:
			add_to_group('dialogic_portrait_con_speaker')

	if Engine.is_editor_hint():
		resized.connect(_update_debug_origin)

		if !ProjectSettings.get_setting('dialogic/portraits/default_portrait', '').is_empty():
			default_portrait_scene = ProjectSettings.get_setting('dialogic/portraits/default_portrait', '')

		debug_origin = Sprite2D.new()
		add_child(debug_origin)
		debug_origin.texture = load(\"res://addons/dialogic/Editor/Images/Dropdown/default.svg\")

		_update_debug_origin()
		_update_debug_portrait_scene()
	else:
		resized.connect(update_portrait_transforms)


################################################################################
##						MAIN METHODS
################################################################################

func update_portrait_transforms() -> void:
	if ignore_resize:
		return

	match pivot_mode:
		PivotModes.AT_ORIGIN:
			pivot_offset = _get_origin_position()
		PivotModes.PERCENTAGE:
			pivot_offset = size*pivot_value
		PivotModes.PIXELS:
			pivot_offset = pivot_value

	for child in get_children():
		DialogicUtil.autoload().Portraits._update_character_transform(child)


## Returns a Rect2 with the position as the position and the scale as the size.
func get_local_portrait_transform(portrait_rect:Rect2, character_scale:=1.0) -> Rect2:
	var transform := Rect2()
	transform.position = _get_origin_position()

	# Mode that ignores the containers size
	if size_mode == SizeModes.KEEP:
		transform.size = Vector2(1,1) * character_scale

	# Mode that makes sure neither height nor width go out of container
	elif size_mode == SizeModes.FIT_IGNORE_SCALE:
		if size.x/size.y < portrait_rect.size.x/portrait_rect.size.y:
			transform.size = Vector2(1,1) * size.x/portrait_rect.size.x
		else:
			transform.size = Vector2(1,1) * size.y/portrait_rect.size.y

	# Mode that stretches the portrait to fill the whole container
	elif size_mode == SizeModes.FIT_STRETCH:
		transform.size = size/portrait_rect.size

	# Mode that size the character so 100% size fills the height
	elif size_mode == SizeModes.FIT_SCALE_HEIGHT:
		transform.size = Vector2(1,1) * size.y / portrait_rect.size.y*character_scale

	return transform


## Returns the current origin position
func _get_origin_position(rect_size = null) -> Vector2:
	if rect_size == null:
		rect_size = size
	return rect_size * Vector2(origin_anchor%3 / 2.0, floor(origin_anchor/3.0) / 2.0) + origin_offset


func is_container(id:Variant) -> bool:
	return str(id) in container_ids

#region DEBUG METHODS
################################################################################
### USE THIS TO DEBUG THE POSITIONS
#func _draw():
	#draw_rect(Rect2(Vector2(), size), Color(1, 0.3098039329052, 1), false, 2)
	#draw_string(get_theme_default_font(),get_theme_default_font().get_string_size(container_ids[0], HORIZONTAL_ALIGNMENT_LEFT, 1, get_theme_default_font_size()) , container_ids[0], HORIZONTAL_ALIGNMENT_CENTER)
#
#func _process(delta:float) -> void:
	#queue_redraw()


## Loads the debug_character with the debug_character_portrait
## Creates a holder node and applies mirror
func _update_debug_portrait_scene() -> void:
	if !Engine.is_editor_hint():
		return
	if is_instance_valid(debug_character_holder_node):
		for child in get_children():
			if child != debug_origin:
				child.free()

	# Get character
	var character := _get_debug_character()
	if not character is DialogicCharacter or character.portraits.is_empty():
		return

	# Determine portrait
	var debug_portrait := debug_character_portrait
	if debug_portrait.is_empty():
		debug_portrait = character.default_portrait
	if mode == PositionModes.SPEAKER and !portrait_prefix.is_empty():
		if portrait_prefix+debug_portrait in character.portraits:
			debug_portrait = portrait_prefix+debug_portrait
	if not debug_portrait in character.portraits:
		debug_portrait = character.default_portrait

	var portrait_info: Dictionary = character.get_portrait_info(debug_portrait)

	# Determine scene
	var portrait_scene_path: String = portrait_info.get('scene', default_portrait_scene)
	if portrait_scene_path.is_empty():
		portrait_scene_path = default_portrait_scene

	debug_character_scene_node = load(portrait_scene_path).instantiate()

	if !is_instance_valid(debug_character_scene_node):
		return

	# Load portrait
	DialogicUtil.apply_scene_export_overrides(debug_character_scene_node, character.portraits[debug_portrait].get('export_overrides', {}))
	debug_character_scene_node._update_portrait(character, debug_portrait)

	# Add character node
	if !is_instance_valid(debug_character_holder_node):
		debug_character_holder_node = Node2D.new()
		add_child(debug_character_holder_node)

	# Add portrait node
	debug_character_holder_node.add_child(debug_character_scene_node)
	move_child(debug_character_holder_node, 0)
	debug_character_scene_node._set_mirror(character.mirror != mirrored != portrait_info.get('mirror', false))

	_update_debug_portrait_transform()


## Set's the size and position of the holder and scene node
## according to the size_mode
func _update_debug_portrait_transform() -> void:
	if !Engine.is_editor_hint() or !is_instance_valid(debug_character_scene_node) or !is_instance_valid(debug_origin):
		return
	var character := _get_debug_character()
	var portrait_info := character.get_portrait_info(debug_character_portrait)
	var transform := get_local_portrait_transform(debug_character_scene_node._get_covered_rect(), character.scale*portrait_info.get('scale', 1))
	debug_character_holder_node.position = transform.position
	debug_character_scene_node.position = portrait_info.get('offset', Vector2())+character.offset

	debug_character_holder_node.scale = transform.size


## Updates the debug origins position. Also calls _update_debug_portrait_transform()
func _update_debug_origin() -> void:
	if !Engine.is_editor_hint() or !is_instance_valid(debug_origin):
		return
	debug_origin.position = _get_origin_position()
	_update_debug_portrait_transform()



## Returns the debug character or the default debug character
func _get_debug_character() -> DialogicCharacter:
	return debug_character if debug_character != null else default_debug_character

#endregion
"

[sub_resource type="GDScript" id="GDScript_wkhqb"]
script/source = "@icon(\"node_name_label_icon.svg\")
extends Label

class_name DialogicNode_NameLabel

# If true, the label will be hidden if no character speaks.
@export var hide_when_empty := true
@export var name_label_root: Node = self
@export var use_character_color := true

func _ready() -> void:
	add_to_group('dialogic_name_label')
	if hide_when_empty:
		name_label_root.visible = false
	text = \"\"


func _set(property, what):
	if property == 'text' and typeof(what) == TYPE_STRING:
		text = what
		if hide_when_empty:
			name_label_root.visible = !what.is_empty()
		else:
			name_label_root.show()
		return true
"

[sub_resource type="GDScript" id="GDScript_jgurd"]
script/source = "@icon(\"node_dialog_text_icon.svg\")
class_name DialogicNode_DialogText
extends RichTextLabel

## Dialogic node that can reveal text at a given (changeable speed).

signal started_revealing_text()
signal continued_revealing_text(new_character : String)
signal finished_revealing_text()
enum Alignment {LEFT, CENTER, RIGHT}

@export var enabled := true
@export var alignment := Alignment.LEFT
@export var textbox_root: Node = self

@export var hide_when_empty := false
@export var start_hidden := true

var revealing := false
var base_visible_characters := 0

# The used speed per revealed character.
# May be overwritten when syncing reveal speed to voice.
var active_speed: float = 0.01

var speed_counter: float = 0

func _set(property: StringName, what: Variant) -> bool:
	if property == 'text' and typeof(what) == TYPE_STRING:

		text = what

		if hide_when_empty:
			textbox_root.visible = !what.is_empty()

		return true
	return false


func _ready() -> void:
	# add to necessary
	add_to_group('dialogic_dialog_text')
	meta_hover_ended.connect(_on_meta_hover_ended)
	meta_hover_started.connect(_on_meta_hover_started)
	meta_clicked.connect(_on_meta_clicked)
	gui_input.connect(on_gui_input)
	bbcode_enabled = true
	if textbox_root == null:
		textbox_root = self

	if start_hidden:
		textbox_root.hide()
	text = \"\"


# this is called by the DialogicGameHandler to set text

func reveal_text(_text: String, keep_previous:=false) -> void:
	if !enabled:
		return
	show()

	if !keep_previous:
		text = _text
		base_visible_characters = 0

		if alignment == Alignment.CENTER:
			text = '[center]'+text
		elif alignment == Alignment.RIGHT:
			text = '[right]'+text
		visible_characters = 0

	else:
		base_visible_characters = len(text)
		visible_characters = len(get_parsed_text())
		text = text + _text

		# If Auto-Skip is enabled and we append the text (keep_previous),
		# we can skip revealing the text and just show it all at once.
		if DialogicUtil.autoload().Inputs.auto_skip.enabled:
			visible_characters = 1
			return

	revealing = true
	speed_counter = 0
	started_revealing_text.emit()


func set_speed(delay_per_character:float) -> void:
	if DialogicUtil.autoload().Text.is_text_voice_synced() and DialogicUtil.autoload().Voice.is_running():
		var total_characters := get_total_character_count() as float
		var remaining_time: float = DialogicUtil.autoload().Voice.get_remaining_time()
		var synced_speed :=  remaining_time / total_characters
		active_speed = synced_speed

	else:
		active_speed = delay_per_character


## Reveals one additional character.
func continue_reveal() -> void:
	if visible_characters <= get_total_character_count():
		revealing = false

		var current_index := visible_characters - base_visible_characters
		await DialogicUtil.autoload().Text.execute_effects(current_index, self, false)

		if visible_characters == -1:
			return

		revealing = true
		visible_characters += 1

		if visible_characters > -1 and visible_characters <= len(get_parsed_text()):
			continued_revealing_text.emit(get_parsed_text()[visible_characters-1])
	else:
		finish_text()
		# if the text finished organically, add a small input block
		# this prevents accidental skipping when you expected the text to be longer
		DialogicUtil.autoload().Inputs.block_input(ProjectSettings.get_setting('dialogic/text/advance_delay', 0.1))


## Reveals the entire text instantly.
func finish_text() -> void:
	visible_ratio = 1
	DialogicUtil.autoload().Text.execute_effects(-1, self, true)
	revealing = false
	DialogicUtil.autoload().current_state = DialogicGameHandler.States.IDLE

	finished_revealing_text.emit()


## Checks if the next character in the text can be revealed.
func _process(delta: float) -> void:
	if !revealing or DialogicUtil.autoload().paused:
		return

	speed_counter += delta

	while speed_counter > active_speed and revealing and !DialogicUtil.autoload().paused:
		speed_counter -= active_speed
		continue_reveal()



func _on_meta_hover_started(_meta:Variant) -> void:
	DialogicUtil.autoload().Inputs.action_was_consumed = true

func _on_meta_hover_ended(_meta:Variant) -> void:
	DialogicUtil.autoload().Inputs.action_was_consumed = false

func _on_meta_clicked(_meta:Variant) -> void:
	DialogicUtil.autoload().Inputs.action_was_consumed = true


## Handle mouse input
func on_gui_input(event:InputEvent) -> void:
	DialogicUtil.autoload().Inputs.handle_node_gui_input(event)
"

[sub_resource type="GDScript" id="GDScript_gt1e4"]
script/source = "@tool
class_name DialogicNode_TypeSounds
extends AudioStreamPlayer

## Node that allows playing sounds when text characters are revealed.
## Should be the child of a DialogicNode_DialogText node!

## Usefull if you want to change the sounds of different node's sounds
@export var enabled := true
enum Modes {INTERRUPT, OVERLAP, AWAIT}
## If true, interrupts the current sound to play a new one
@export var mode := Modes.INTERRUPT
## Array of sounds. Will pick a random one each time.
@export var sounds: Array[AudioStream] = []
## A sound to be played as the last sound.
@export var end_sound:AudioStream
## Determines how many characters are between each sound. Default is 1 for playing it every character.
@export var play_every_character  := 1
## Allows changing the pitch by a random value from (pitch - pitch_variance) to (pitch + pitch_variance)
@export_range(0, 3, 0.01) var pitch_variance := 0.0
## Allows changing the volume by a random value from (volume - volume_variance) to (volume + volume_variance)
@export_range(0, 10, 0.01) var volume_variance := 0.0
## Characters that don't increase the 'characters_since_last_sound' variable, useful for the space or fullstop
@export var ignore_characters: String = ' .,'

var characters_since_last_sound: int = 0
var base_pitch: float = pitch_scale
var base_volume: float = volume_db
var RNG := RandomNumberGenerator.new()

var current_overwrite_data := {}

func _ready() -> void:
	# add to necessary group
	add_to_group('dialogic_type_sounds')

	if bus == \"Master\":
		bus = ProjectSettings.get_setting(\"dialogic/audio/type_sound_bus\", \"Master\")

	if !Engine.is_editor_hint() and get_parent() is DialogicNode_DialogText:
		get_parent().started_revealing_text.connect(_on_started_revealing_text)
		get_parent().continued_revealing_text.connect(_on_continued_revealing_text)
		get_parent().finished_revealing_text.connect(_on_finished_revealing_text)


func _on_started_revealing_text() -> void:
	if !enabled or (get_parent() is DialogicNode_DialogText and !get_parent().enabled):
		return
	characters_since_last_sound = current_overwrite_data.get('skip_characters', play_every_character-1)+1


func _on_continued_revealing_text(new_character:String) -> void:
	if !enabled or (get_parent() is DialogicNode_DialogText and !get_parent().enabled):
		return

	# We don't want to play type sounds if Auto-Skip is enabled.
	if !Engine.is_editor_hint() and DialogicUtil.autoload().Inputs.auto_skip.enabled:
		return

	# don't play if a voice-track is running
	if !Engine.is_editor_hint() and get_parent() is DialogicNode_DialogText:
		if DialogicUtil.autoload().has_subsystem(\"Voice\") and DialogicUtil.autoload().Voice.is_running():
			return

	# if sound playing and can't interrupt
	if playing and current_overwrite_data.get('mode', mode) == Modes.AWAIT:
		return

	# if no sounds were given
	if current_overwrite_data.get('sounds', sounds).size() == 0:
		return

	# if the new character is not allowed
	if new_character in ignore_characters:
		return

	characters_since_last_sound += 1
	if characters_since_last_sound < current_overwrite_data.get('skip_characters', play_every_character-1)+1:
		return

	characters_since_last_sound = 0

	var audio_player: AudioStreamPlayer = self
	if current_overwrite_data.get('mode', mode) == Modes.OVERLAP:
		audio_player = AudioStreamPlayer.new()
		audio_player.bus = bus
		add_child(audio_player)
	elif current_overwrite_data.get('mode', mode) == Modes.INTERRUPT:
		stop()

	#choose the random sound
	audio_player.stream = current_overwrite_data.get('sounds', sounds)[RNG.randi_range(0, current_overwrite_data.get('sounds', sounds).size() - 1)]

	#choose a random pitch and volume
	audio_player.pitch_scale = max(0, current_overwrite_data.get('pitch_base', base_pitch) + current_overwrite_data.get('pitch_variance', pitch_variance) * RNG.randf_range(-1.0, 1.0))
	audio_player.volume_db = current_overwrite_data.get('volume_base', base_volume) + current_overwrite_data.get('volume_variance',volume_variance) * RNG.randf_range(-1.0, 1.0)

	#play the sound
	audio_player.play(0)

	if current_overwrite_data.get('mode', mode) == Modes.OVERLAP:
		audio_player.finished.connect(audio_player.queue_free)


func _on_finished_revealing_text() -> void:
	# We don't want to play type sounds if Auto-Skip is enabled.
	if !Engine.is_editor_hint() and DialogicUtil.autoload().Inputs.auto_skip.enabled:
		return

	if end_sound != null:
		stream = end_sound
		play()


func load_overwrite(dictionary:Dictionary) -> void:
	current_overwrite_data = dictionary
	if dictionary.has('sound_path'):
		current_overwrite_data['sounds'] = DialogicNode_TypeSounds.load_sounds_from_path(dictionary.sound_path)


static func load_sounds_from_path(path:String) -> Array[AudioStream]:
	if path.get_extension().to_lower() in ['mp3', 'wav', 'ogg'] and load(path) is AudioStream:
		return [load(path)]
	var _sounds: Array[AudioStream] = []
	for file in DialogicUtil.listdir(path, true, false, true, true):
		if !file.ends_with('.import'):
			continue
		if file.trim_suffix('.import').get_extension().to_lower() in ['mp3', 'wav', 'ogg'] and ResourceLoader.load(file.trim_suffix('.import')) is AudioStream:
			_sounds.append(ResourceLoader.load(file.trim_suffix('.import')))
	return _sounds


############# USER INTERFACE ###################################################

func _get_configuration_warnings() -> PackedStringArray:
	if not get_parent() is DialogicNode_DialogText:
		return [\"This should be the child of a DialogText node!\"]
	return []
"

[sub_resource type="PackedScene" id="PackedScene_c5n8v"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("TextboxWithSpeakerPortrait", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "mouse_filter", "script", "box_panel", "box_distance", "Control", "Anchor", "anchor_left", "anchor_top", "PortraitPanel", "unique_name_in_owner", "clip_children", "offset_left", "offset_top", "offset_right", "offset_bottom", "size_flags_horizontal", "size_flags_stretch_ratio", "theme_override_styles/panel", "Panel", "PortraitBackgroundColor", "color", "ColorRect", "DialogicNode_PortraitContainer", "mode", "container_ids", "debug_character_portrait", "NinePatchRect", "texture", "self_modulate", "PanelContainer", "VBoxContainer", "DialogicNode_NameLabel", "theme_override_font_sizes/font_size", "text", "Label", "DialogicNode_DialogText", "size_flags_vertical", "theme_override_font_sizes/normal_font_size", "bbcode_enabled", "scroll_following", "visible_characters_behavior", "textbox_root", "RichTextLabel", "DialogicNode_TypeSounds", "AudioStreamPlayer"),
"node_count": 11,
"node_paths": [],
"nodes": PackedInt32Array(-1, -1, 11, 0, -1, 10, 1, 0, 2, 1, 3, 2, 4, 2, 5, 3, 6, 3, 7, 3, 8, 4, 9, 5, 10, 6, 0, 0, 0, 11, 12, -1, 9, 1, 7, 2, 8, 13, 9, 14, 2, 3, 9, 4, 2, 5, 3, 6, 6, 7, 3, 0, 1, 0, 25, 15, -1, 11, 16, 10, 17, 7, 1, 3, 18, 11, 19, 12, 20, 13, 21, 14, 22, 0, 23, 15, 7, 3, 24, 16, 0, 2, 0, 28, 26, -1, 13, 16, 10, 1, 7, 2, 1, 3, 2, 4, 2, 18, 17, 19, 18, 20, 19, 21, 20, 5, 3, 6, 3, 7, 3, 27, 21, 0, 3, 0, 11, 29, -1, 12, 1, 7, 2, 1, 3, 2, 4, 2, 19, 22, 5, 3, 6, 3, 7, 3, 8, 23, 30, 7, 31, 24, 32, 25, 0, 2, 0, 33, 33, -1, 6, 1, 6, 18, 26, 19, 27, 20, 28, 21, 29, 34, 30, 0, 1, 0, 36, 25, -1, 15, 16, 10, 35, 31, 1, 7, 2, 8, 13, 9, 14, 2, 3, 9, 4, 2, 18, 11, 19, 14, 20, 32, 21, 33, 5, 3, 6, 6, 7, 3, 0, 6, 0, 37, 37, -1, 3, 1, 3, 22, 0, 7, 3, 0, 7, 0, 41, 38, -1, 5, 16, 10, 1, 3, 39, 34, 40, 35, 8, 36, 0, 7, 0, 49, 42, -1, 10, 16, 10, 1, 3, 43, 0, 44, 37, 45, 10, 40, 38, 46, 10, 47, 7, 8, 39, 1073741872, 40, 0, 9, 0, 51, 50, -1, 1, 8, 41, 0),
"variants": [3, 15, 1.0, 2, SubResource("GDScript_ty4ww"), "res://addons/dialogic/Modules/DefaultLayoutParts/Layer_SpeakerPortraitTextbox/default_stylebox.tres", 0, 1, 7, 0.5, true, -250.0, -350.0, -100.0, -200.0, 0.3, SubResource("StyleBoxFlat_dmg1w"), -7.0, -3.0, 7.0, 3.0, Color(0, 0, 0, 0.231373), 4.0, SubResource("GDScript_8anu2"), PackedStringArray("1"), "speaker", -21.0, -9.0, 460.0, 227.0, ExtResource("1_r2sc0"), Color(0.533333, 0.376471, 0.176471, 1), 250.0, -50.0, 8, "Name", SubResource("GDScript_wkhqb"), 6, "Some text", SubResource("GDScript_jgurd"), NodePath("../.."), SubResource("GDScript_gt1e4")],
"version": 3
}

[sub_resource type="Resource" id="Resource_8e5ww"]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_5fbhy")
scene = SubResource("PackedScene_c5n8v")
overrides = {}

[sub_resource type="GDScript" id="GDScript_o3qb2"]
script/source = "@tool
extends DialogicLayoutLayer

## Layer that provides a popup with glossary info,
## when hovering a glossary entry on a text node.


@export_group('Text')
enum Alignment {LEFT, CENTER, RIGHT}
@export var title_alignment: Alignment = Alignment.LEFT
@export var text_alignment: Alignment = Alignment.LEFT
@export var extra_alignment: Alignment = Alignment.RIGHT

@export_subgroup(\"Colors\")
enum TextColorModes {GLOBAL, ENTRY, CUSTOM}
@export var title_color_mode: TextColorModes = TextColorModes.ENTRY
@export var title_custom_color: Color = Color.WHITE
@export var text_color_mode: TextColorModes = TextColorModes.ENTRY
@export var text_custom_color: Color = Color.WHITE
@export var extra_color_mode: TextColorModes = TextColorModes.ENTRY
@export var extra_custom_color: Color = Color.WHITE


@export_group(\"Font\")
@export var font_use_global: bool = true
@export_file('*.ttf', '*.tres') var font_custom: String = \"\"

@export_subgroup('Sizes')
@export var font_title_size: int = 18
@export var font_text_size: int = 17
@export var font_extra_size: int = 15


@export_group(\"Box\")
@export_subgroup(\"Color\")
enum ModulateModes {BASE_COLOR_ONLY, ENTRY_COLOR_ON_BOX, GLOBAL_BG_COLOR}
@export var box_modulate_mode: ModulateModes = ModulateModes.ENTRY_COLOR_ON_BOX
@export var box_base_modulate: Color = Color.WHITE
@export_subgroup(\"Size\")
@export var box_width: int = 200

const MISSING_INDEX := -1
func get_pointer() -> Control:
	return $Pointer


func get_title() -> Label:
	return %Title


func get_text() -> RichTextLabel:
	return %Text


func get_extra() -> RichTextLabel:
	return %Extra


func get_panel() -> PanelContainer:
	return %Panel


func get_panel_point() -> PanelContainer:
	return %PanelPoint


func _ready() -> void:
	if Engine.is_editor_hint():
		return

	get_pointer().hide()
	var text_system: Node = DialogicUtil.autoload().get(&'Text')
	var _error: int = 0
	_error = text_system.connect(&'animation_textbox_hide', get_pointer().hide)
	_error = text_system.connect(&'meta_hover_started', _on_dialogic_display_dialog_text_meta_hover_started)
	_error = text_system.connect(&'meta_hover_ended', _on_dialogic_display_dialog_text_meta_hover_ended)


## Method that shows the bubble and fills in the info
func _on_dialogic_display_dialog_text_meta_hover_started(meta: String) -> void:
	var entry_info := DialogicUtil.autoload().Glossary.get_entry(meta)

	if entry_info.is_empty():
		return

	get_pointer().show()
	get_title().text = entry_info.title
	get_text().text = entry_info.text
	get_text().text = ['', '[center]', '[right]'][text_alignment] + get_text().text
	get_extra().text = entry_info.extra
	get_extra().text = ['', '[center]', '[right]'][extra_alignment] + get_extra().text
	get_pointer().global_position = get_pointer().get_global_mouse_position()

	if title_color_mode == TextColorModes.ENTRY:
		get_title().add_theme_color_override(&\"font_color\", entry_info.color)
	if text_color_mode == TextColorModes.ENTRY:
		get_text().add_theme_color_override(&\"default_color\", entry_info.color)
	if extra_color_mode == TextColorModes.ENTRY:
		get_extra().add_theme_color_override(&\"default_color\", entry_info.color)

	match box_modulate_mode:
		ModulateModes.ENTRY_COLOR_ON_BOX:
			get_panel().self_modulate = entry_info.color
			get_panel_point().self_modulate = entry_info.color


## Method that keeps the bubble at mouse position when visible
func _process(_delta: float) -> void:
	if Engine.is_editor_hint():
		return

	var pointer: Control = get_pointer()
	if pointer.visible:
		pointer.global_position = pointer.get_global_mouse_position()


## Method that hides the bubble
func _on_dialogic_display_dialog_text_meta_hover_ended(_meta:String) -> void:
	get_pointer().hide()



func _apply_export_overrides() -> void:
	# Apply fonts
	var font: FontFile
	var global_font_setting: String = get_global_setting(&\"font\", '')
	if font_use_global and ResourceLoader.exists(global_font_setting):
		font = load(global_font_setting)
	elif ResourceLoader.exists(font_custom):
		font = load(font_custom)

	var title: Label = get_title()
	if font:
		title.add_theme_font_override(&\"font\", font)
	title.horizontal_alignment = title_alignment as HorizontalAlignment

	# Apply font & sizes
	title.add_theme_font_size_override(&\"font_size\", font_title_size)
	var labels: Array[RichTextLabel] = [get_text(), get_extra()]
	var sizes: PackedInt32Array = [font_text_size, font_extra_size]
	for i : int in len(labels):
		if font:
			labels[i].add_theme_font_override(&'normal_font', font)

		labels[i].add_theme_font_size_override(&\"normal_font_size\", sizes[i])
		labels[i].add_theme_font_size_override(&\"bold_font_size\", sizes[i])
		labels[i].add_theme_font_size_override(&\"italics_font_size\", sizes[i])
		labels[i].add_theme_font_size_override(&\"bold_italics_font_size\", sizes[i])
		labels[i].add_theme_font_size_override(&\"mono_font_size\", sizes[i])


	# Apply text colors
	# this applies Global or Custom colors, entry colors are applied on hover
	var controls: Array[Control] = [get_title(), get_text(), get_extra()]
	var settings: Array[StringName] = [&'font_color', &'default_color', &'default_color']
	var color_modes: Array[TextColorModes] = [title_color_mode, text_color_mode, extra_color_mode]
	var custom_colors: PackedColorArray = [title_custom_color, text_custom_color, extra_custom_color]
	for i : int in len(controls):
		match color_modes[i]:
			TextColorModes.GLOBAL:
				controls[i].add_theme_color_override(settings[i], get_global_setting(&'font_color', custom_colors[i]) as Color)
			TextColorModes.CUSTOM:
				controls[i].add_theme_color_override(settings[i], custom_colors[i])

	# Apply box size
	var panel: PanelContainer = get_panel()
	panel.size.x = box_width
	panel.position.x = -box_width/2.0

	# Apply box coloring
	match box_modulate_mode:
		ModulateModes.BASE_COLOR_ONLY:
			panel.self_modulate = box_base_modulate
			get_panel_point().self_modulate = box_base_modulate
		ModulateModes.GLOBAL_BG_COLOR:
			panel.self_modulate = get_global_setting(&'bg_color', box_base_modulate)
			get_panel_point().self_modulate = get_global_setting(&'bg_color', box_base_modulate)
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_a3cyk"]
bg_color = Color(0.12549, 0.12549, 0.12549, 1)
border_width_left = 2
border_width_top = 4
border_width_right = 4
border_width_bottom = 2
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
expand_margin_left = 5.0
expand_margin_top = 5.0
expand_margin_right = 5.0
expand_margin_bottom = 5.0

[sub_resource type="PackedScene" id="PackedScene_gg2jv"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("Glossary", "Control", "layout_mode", "anchors_preset", "mouse_filter", "script", "Pointer", "Control", "anchors_preset", "Panel", "PanelContainer", "unique_name_in_owner", "layout_mode", "anchors_preset", "anchor_left", "anchor_top", "anchor_right", "anchor_bottom", "offset_left", "offset_top", "offset_right", "offset_bottom", "grow_horizontal", "grow_vertical", "theme_override_styles/panel", "metadata/_edit_use_custom_anchors", "metadata/_edit_layout_mode", "VBox", "VBoxContainer", "layout_mode", "theme_override_constants/separation", "Title", "Label", "unique_name_in_owner", "layout_mode", "HSeparator", "HSeparator", "layout_mode", "Text", "RichTextLabel", "unique_name_in_owner", "layout_mode", "bbcode_enabled", "fit_content", "Extra", "RichTextLabel", "unique_name_in_owner", "layout_mode", "theme_override_font_sizes/normal_font_size", "bbcode_enabled", "fit_content", "Control", "Control", "show_behind_parent", "layout_mode", "size_flags_horizontal", "size_flags_vertical", "PanelPoint", "PanelContainer", "unique_name_in_owner", "layout_mode", "offset_left", "offset_top", "offset_right", "offset_bottom", "rotation", "size_flags_horizontal", "size_flags_vertical", "theme_override_styles/panel"),
"node_count": 10,
"node_paths": [NodePath("."), NodePath("./Pointer"), NodePath("./Pointer/Panel"), NodePath("./Pointer/Panel/VBox"), NodePath("./Pointer/Panel/VBox"), NodePath("./Pointer/Panel/VBox"), NodePath("./Pointer/Panel/VBox"), NodePath("./Pointer/Panel"), NodePath("./Pointer/Panel/Control")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 4, 2, 0, 3, 1, 4, 2, 5, 3, 0, 1073741824, 0, 7, 6, -1, 1, 8, 4, 0, 1073741825, 0, 10, 9, -1, 16, 11, 5, 12, 6, 13, 7, 14, 8, 15, 9, 16, 10, 17, 11, 18, 12, 19, 13, 20, 14, 21, 15, 22, 16, 23, 17, 24, 18, 25, 19, 26, 20, 0, 1073741826, 0, 28, 27, -1, 2, 29, 21, 30, 22, 0, 1073741827, 0, 32, 31, -1, 2, 33, 23, 34, 24, 0, 1073741828, 0, 36, 35, -1, 1, 37, 25, 0, 1073741829, 0, 39, 38, -1, 4, 40, 26, 41, 27, 42, 28, 43, 29, 0, 1073741830, 0, 45, 44, -1, 5, 46, 30, 47, 31, 48, 32, 49, 33, 50, 34, 0, 1073741831, 0, 52, 51, -1, 4, 53, 35, 54, 36, 55, 37, 56, 38, 0, 1073741832, 0, 58, 57, -1, 10, 59, 39, 60, 40, 61, 41, 62, 42, 63, 43, 64, 44, 65, 45, 66, 46, 67, 47, 68, 48, 0),
"variants": [3, 0, 2, SubResource("GDScript_o3qb2"), 0, true, 1, 7, 0.5, 1.0, 0.5, 1.0, -81.0, -113.0, 86.0, -35.0, 2, 0, SubResource("StyleBoxFlat_a3cyk"), true, 1, 2, 0, true, 2, 2, true, 2, true, true, true, 2, 15, true, true, true, 2, 4, 8, true, 0, -0.999999, -14.0, 19.0, 6.0, 0.75799, 4, 8, SubResource("StyleBoxFlat_a3cyk")],
"version": 3
}

[sub_resource type="Resource" id="Resource_wn5tf"]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_5fbhy")
scene = SubResource("PackedScene_gg2jv")
overrides = {}

[sub_resource type="GDScript" id="GDScript_ormci"]
script/source = "@tool
extends DialogicLayoutLayer

## A layer that allows showing up to 10 choices.
## Choices are positioned in the center of the screen.

@export_group(\"Text\")
@export_subgroup('Font')
@export var font_use_global: bool = true
@export_file('*.ttf', '*.tres') var font_custom: String = \"\"
@export_subgroup('Size')
@export var font_size_use_global: bool = true
@export var font_size_custom: int = 16
@export_subgroup('Color')
@export var text_color_use_global: bool = true
@export var text_color_custom: Color = Color.WHITE
@export var text_color_pressed: Color = Color.WHITE
@export var text_color_hovered: Color = Color.GRAY
@export var text_color_disabled: Color = Color.DARK_GRAY
@export var text_color_focused: Color = Color.WHITE

@export_group('Boxes')
@export_subgroup('Panels')
@export_file('*.tres') var boxes_stylebox_normal: String = \"res://addons/dialogic/Modules/DefaultLayoutParts/Layer_VN_Choices/choice_panel_normal.tres\"
@export_file('*.tres') var boxes_stylebox_hovered: String = \"res://addons/dialogic/Modules/DefaultLayoutParts/Layer_VN_Choices/choice_panel_hover.tres\"
@export_file('*.tres') var boxes_stylebox_pressed: String = \"\"
@export_file('*.tres') var boxes_stylebox_disabled: String = \"\"
@export_file('*.tres') var boxes_stylebox_focused: String = \"res://addons/dialogic/Modules/DefaultLayoutParts/Layer_VN_Choices/choice_panel_focus.tres\"
@export_subgroup('Modulate')
@export_subgroup('Size & Position')
@export var boxes_v_separation: int = 10
@export var boxes_fill_width: bool = true
@export var boxes_min_size: Vector2 = Vector2()
@export var boxes_offset: Vector2 = Vector2()

@export_group('Sounds')
@export_range(-80, 24, 0.01) var sounds_volume: float = -10
@export_file(\"*.wav\", \"*.ogg\", \"*.mp3\") var sounds_pressed: String = \"res://addons/dialogic/Example Assets/sound-effects/typing1.wav\"
@export_file(\"*.wav\", \"*.ogg\", \"*.mp3\") var sounds_hover: String = \"res://addons/dialogic/Example Assets/sound-effects/typing2.wav\"
@export_file(\"*.wav\", \"*.ogg\", \"*.mp3\") var sounds_focus: String = \"res://addons/dialogic/Example Assets/sound-effects/typing4.wav\"

func get_choices() -> VBoxContainer:
	return $Choices


func get_button_sound() -> DialogicNode_ButtonSound:
	return %DialogicNode_ButtonSound


## Method that applies all exported settings
func _apply_export_overrides() -> void:
	# apply text settings
	var layer_theme: Theme = Theme.new()

	# font
	if font_use_global and get_global_setting(&'font', false):
		layer_theme.set_font(&'font', &'Button', load(get_global_setting(&'font', '') as String) as Font)
	elif ResourceLoader.exists(font_custom):
		layer_theme.set_font(&'font', &'Button', load(font_custom) as Font)

	# font size
	if font_size_use_global:
		layer_theme.set_font_size(&'font_size', &'Button', get_global_setting(&'font_size', font_size_custom) as int)
	else:
		layer_theme.set_font_size(&'font_size', &'Button', font_size_custom)

	# font color
	if text_color_use_global:
		layer_theme.set_color(&'font_color', &'Button', get_global_setting(&'font_color', text_color_custom) as Color)
	else:
		layer_theme.set_color(&'font_color', &'Button', text_color_custom)

	layer_theme.set_color(&'font_pressed_color', &'Button', text_color_pressed)
	layer_theme.set_color(&'font_hover_color', &'Button', text_color_hovered)
	layer_theme.set_color(&'font_disabled_color', &'Button', text_color_disabled)
	layer_theme.set_color(&'font_pressed_color', &'Button', text_color_pressed)
	layer_theme.set_color(&'font_focus_color', &'Button', text_color_focused)


	# apply box settings
	if ResourceLoader.exists(boxes_stylebox_normal):
		var style_box: StyleBox = load(boxes_stylebox_normal)
		layer_theme.set_stylebox(&'normal', &'Button', style_box)
		layer_theme.set_stylebox(&'hover', &'Button', style_box)
		layer_theme.set_stylebox(&'pressed', &'Button', style_box)
		layer_theme.set_stylebox(&'disabled', &'Button', style_box)
		layer_theme.set_stylebox(&'focus', &'Button', style_box)

	if ResourceLoader.exists(boxes_stylebox_hovered):
		layer_theme.set_stylebox(&'hover', &'Button', load(boxes_stylebox_hovered) as StyleBox)

	if ResourceLoader.exists(boxes_stylebox_pressed):
		layer_theme.set_stylebox(&'pressed', &'Button', load(boxes_stylebox_pressed) as StyleBox)
	if ResourceLoader.exists(boxes_stylebox_disabled):
		layer_theme.set_stylebox(&'disabled', &'Button', load(boxes_stylebox_disabled) as StyleBox)
	if ResourceLoader.exists(boxes_stylebox_focused):
		layer_theme.set_stylebox(&'focus', &'Button', load(boxes_stylebox_focused) as StyleBox)

	get_choices().add_theme_constant_override(&\"separation\", boxes_v_separation)
	self.position = boxes_offset

	for child: Node in get_choices().get_children():
		if not child is DialogicNode_ChoiceButton:
			continue
		var choice: DialogicNode_ChoiceButton = child as DialogicNode_ChoiceButton

		if boxes_fill_width:
			choice.size_flags_horizontal = Control.SIZE_FILL
		else:
			choice.size_flags_horizontal = Control.SIZE_SHRINK_CENTER

		choice.custom_minimum_size = boxes_min_size


	set(&'theme', layer_theme)

	# apply sound settings
	var button_sound: DialogicNode_ButtonSound = get_button_sound()
	button_sound.volume_db = sounds_volume
	button_sound.sound_pressed = load(sounds_pressed)
	button_sound.sound_hover = load(sounds_hover)
	button_sound.sound_focus = load(sounds_focus)
"

[sub_resource type="GDScript" id="GDScript_tmvb5"]
script/source = "class_name DialogicNode_ChoiceButton
extends Button
## The button allows the player to make a choice in the Dialogic system.
##
## This class is used in the Choice Layer. [br]
## You may change the [member text_node] to any [class Node] that has a
## `text` property. [br]
## If you don't set the [member text_node], the text will be set on this
## button instead.
##
## Using a different node may allow using rich text effects; they are
## not supported on buttons at this point.


## Used to identify what choices to put on. If you leave it at -1, choices will be distributed automatically.
@export var choice_index: int = -1

## Can be set to play this sound when pressed. Requires a sibling DialogicNode_ButtonSound node.
@export var sound_pressed: AudioStream
## Can be set to play this sound when hovered. Requires a sibling DialogicNode_ButtonSound node.
@export var sound_hover: AudioStream
## Can be set to play this sound when focused. Requires a sibling DialogicNode_ButtonSound node.
@export var sound_focus: AudioStream
## If set, the text will be set on this node's `text` property instead.
@export var text_node: Node


func _ready() -> void:
	add_to_group('dialogic_choice_button')
	shortcut_in_tooltip = false
	hide()


func _load_info(choice_info: Dictionary) -> void:
	set_choice_text(choice_info.text)
	visible = choice_info.visible
	disabled = choice_info.disabled


## Called when the text changes.
func set_choice_text(new_text: String) -> void:
	if text_node:
		text_node.text = new_text
	else:
		text = new_text
"

[sub_resource type="GDScript" id="GDScript_uvocl"]
script/source = "class_name DialogicNode_ButtonSound
extends AudioStreamPlayer

## Node that is used for playing sound effects on hover/focus/press of sibling DialogicNode_ChoiceButtons.

## Sound to be played if one of the sibling ChoiceButtons is pressed.
## If sibling ChoiceButton has a sound_pressed set, that is prioritized.
@export var sound_pressed: AudioStream
## Sound to be played on hover. See [sound_pressed] for more.
@export var sound_hover: AudioStream
## Sound to be played on focus. See [sound_pressed] for more.
@export var sound_focus: AudioStream

func _ready() -> void:
	add_to_group('dialogic_button_sound')
	_connect_all_buttons()

#basic play sound
func play_sound(sound) -> void:
	if sound != null:
		stream = sound
		play()

func _connect_all_buttons() -> void:
	for child in get_parent().get_children():
		if child is DialogicNode_ChoiceButton:
			child.button_up.connect(_on_pressed.bind(child.sound_pressed))
			child.mouse_entered.connect(_on_hover.bind(child.sound_hover))
			child.focus_entered.connect(_on_focus.bind(child.sound_focus))


#the custom_sound argument comes from the specifec button and get used
#if none are found, it uses the above sounds

func _on_pressed(custom_sound) -> void:
	if custom_sound != null:
		play_sound(custom_sound)
	else:
		play_sound(sound_pressed)

func _on_hover(custom_sound) -> void:
	if custom_sound != null:
		play_sound(custom_sound)
	else:
		play_sound(sound_hover)

func _on_focus(custom_sound) -> void:
	if custom_sound != null:
		play_sound(custom_sound)
	else:
		play_sound(sound_focus)

"

[sub_resource type="AudioStreamWAV" id="AudioStreamWAV_ev3gx"]
data = PackedByteArray("")
format = 1

[sub_resource type="AudioStreamWAV" id="AudioStreamWAV_jy2y7"]
data = PackedByteArray("")
format = 1

[sub_resource type="AudioStream" id="AudioStream_pe27w"]

[sub_resource type="PackedScene" id="PackedScene_dof8d"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("VN_ChoiceLayer", "Control", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "mouse_filter", "script", "Choices", "VBoxContainer", "layout_mode", "anchors_preset", "anchor_left", "anchor_top", "anchor_right", "anchor_bottom", "offset_left", "offset_top", "offset_right", "offset_bottom", "grow_horizontal", "grow_vertical", "mouse_filter", "alignment", "metadata/_edit_layout_mode", "DialogicNode_ChoiceButton1", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton2", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton3", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton4", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton5", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton6", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton7", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton8", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton9", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton10", "Button", "layout_mode", "text", "script", "DialogicNode_ChoiceButton11", "Button", "layout_mode", "text", "script", "DialogicNode_ButtonSound", "AudioStreamPlayer", "unique_name_in_owner", "script", "sound_pressed", "sound_hover", "sound_focus"),
"node_count": 14,
"node_paths": [NodePath("."), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices"), NodePath("./Choices")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 8, 2, 0, 3, 1, 4, 2, 5, 3, 6, 4, 7, 5, 8, 6, 9, 7, 0, 1073741824, 0, 11, 10, -1, 15, 12, 8, 13, 9, 14, 10, 15, 11, 16, 12, 17, 13, 18, 14, 19, 15, 20, 16, 21, 17, 22, 18, 23, 19, 24, 20, 25, 21, 26, 22, 0, 1073741825, 0, 28, 27, -1, 3, 29, 23, 30, 24, 31, 25, 0, 1073741826, 0, 33, 32, -1, 3, 34, 26, 35, 27, 36, 28, 0, 1073741827, 0, 38, 37, -1, 3, 39, 29, 40, 30, 41, 31, 0, 1073741828, 0, 43, 42, -1, 3, 44, 32, 45, 33, 46, 34, 0, 1073741829, 0, 48, 47, -1, 3, 49, 35, 50, 36, 51, 37, 0, 1073741830, 0, 53, 52, -1, 3, 54, 38, 55, 39, 56, 40, 0, 1073741831, 0, 58, 57, -1, 3, 59, 41, 60, 42, 61, 43, 0, 1073741832, 0, 63, 62, -1, 3, 64, 44, 65, 45, 66, 46, 0, 1073741833, 0, 68, 67, -1, 3, 69, 47, 70, 48, 71, 49, 0, 1073741834, 0, 73, 72, -1, 3, 74, 50, 75, 51, 76, 52, 0, 1073741835, 0, 78, 77, -1, 3, 79, 53, 80, 54, 81, 55, 0, 1073741836, 0, 83, 82, -1, 5, 84, 56, 85, 57, 86, 58, 87, 59, 88, 60, 0),
"variants": [3, 15, 1.0, 1.0, 2, 2, 2, SubResource("GDScript_ormci"), 1, 8, 0.5, 0.5, 0.5, 0.5, -41.0, -47.0, 42.0, 47.0, 2, 2, 2, 1, 1, 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), 2, "Some text", SubResource("GDScript_tmvb5"), true, SubResource("GDScript_uvocl"), SubResource("AudioStreamWAV_ev3gx"), SubResource("AudioStreamWAV_jy2y7"), SubResource("AudioStream_pe27w")],
"version": 3
}

[sub_resource type="Resource" id="Resource_dqfod"]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_5fbhy")
scene = SubResource("PackedScene_dof8d")
overrides = {}

[sub_resource type="GDScript" id="GDScript_xhp2a"]
script/source = "@tool
extends DialogicLayoutLayer

## A layer that contains a text-input node.


func _apply_export_overrides() -> void:
	var layer_theme: Theme = get(&'theme')
	if layer_theme == null:
		layer_theme = Theme.new()

	if get_global_setting(&'font', ''):
		layer_theme.default_font = load(get_global_setting(&'font', '') as String)
	layer_theme.default_font_size = get_global_setting(&'font_size', 0)
"

[sub_resource type="GDScript" id="GDScript_25maf"]
script/source = "class_name DialogicNode_TextInput
extends Control

## Node that will show when a text input field is reached.
## Should be connected to a (probably contained) label, a line edit and a button to work.

## The LineEdit to use.
@export_node_path var input_line_edit: NodePath
## The Label to use.
@export_node_path var text_label: NodePath
## The Button to use.
@export_node_path var confirmation_button: NodePath

# This is set by the subsystem and used as a confirmation check.
var _allow_empty := false


func _ready() -> void:
	add_to_group('dialogic_text_input')
	if confirmation_button:
		get_node(confirmation_button).pressed.connect(_on_confirmation_button_pressed)
	if input_line_edit:
		get_node(input_line_edit).text_changed.connect(_on_input_text_changed)
		get_node(input_line_edit).text_submitted.connect(_on_confirmation_button_pressed)
	visible = false


func set_text(text:String) -> void:
	if get_node(text_label) is Label:
		get_node(text_label).text = text


func set_placeholder(placeholder:String) -> void:
	if get_node(input_line_edit) is LineEdit:
		get_node(input_line_edit).placeholder_text = placeholder
		get_node(input_line_edit).grab_focus()


func set_default(default:String) -> void:
	if get_node(input_line_edit) is LineEdit:
		get_node(input_line_edit).text = default
		_on_input_text_changed(default)


func set_allow_empty(boolean:bool) -> void:
	_allow_empty = boolean


func _on_input_text_changed(text:String) -> void:
	if confirmation_button.is_empty():
		return
	get_node(confirmation_button).disabled = !_allow_empty and text.is_empty()


func _on_confirmation_button_pressed(text:=\"\") -> void:
	if get_node(input_line_edit) is LineEdit:
		if !get_node(input_line_edit).text.is_empty() or _allow_empty:
			DialogicUtil.autoload().TextInput.input_confirmed.emit(get_node(input_line_edit).text)
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_3dpjm"]
content_margin_left = 15.0
content_margin_top = 15.0
content_margin_right = 15.0
content_margin_bottom = 15.0
bg_color = Color(1, 1, 1, 1)
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="Theme" id="Theme_8xwp1"]

[sub_resource type="PackedScene" id="PackedScene_ntwai"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("TextInputLayer", "Control", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "mouse_filter", "script", "DialogicNode_TextInput", "Control", "layout_mode", "anchors_preset", "anchor_left", "anchor_top", "anchor_right", "anchor_bottom", "offset_left", "offset_top", "offset_right", "offset_bottom", "grow_horizontal", "grow_vertical", "mouse_filter", "script", "input_line_edit", "text_label", "confirmation_button", "metadata/_edit_layout_mode", "TextInputPanel", "PanelContainer", "unique_name_in_owner", "self_modulate", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "theme_override_styles/panel", "VBoxContainer", "VBoxContainer", "layout_mode", "TextLabel", "Label", "unique_name_in_owner", "layout_mode", "theme", "text", "autowrap_mode", "InputField", "LineEdit", "layout_mode", "ConfirmationButton", "Button", "layout_mode", "size_flags_horizontal", "text"),
"node_count": 7,
"node_paths": [NodePath("."), NodePath("./DialogicNode_TextInput"), NodePath("./DialogicNode_TextInput/TextInputPanel"), NodePath("./DialogicNode_TextInput/TextInputPanel/VBoxContainer"), NodePath("./DialogicNode_TextInput/TextInputPanel/VBoxContainer"), NodePath("./DialogicNode_TextInput/TextInputPanel/VBoxContainer")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 8, 2, 0, 3, 1, 4, 2, 5, 3, 6, 4, 7, 5, 8, 6, 9, 7, 0, 1073741824, 0, 11, 10, -1, 18, 12, 8, 13, 9, 14, 10, 15, 11, 16, 12, 17, 13, 18, 14, 19, 15, 20, 16, 21, 17, 22, 18, 23, 19, 24, 20, 25, 21, 26, 22, 27, 23, 28, 24, 29, 25, 0, 1073741825, 0, 31, 30, -1, 9, 32, 26, 33, 27, 34, 28, 35, 29, 36, 30, 37, 31, 38, 32, 39, 33, 40, 34, 0, 1073741826, 0, 42, 41, -1, 1, 43, 35, 0, 1073741827, 0, 45, 44, -1, 5, 46, 36, 47, 37, 48, 38, 49, 39, 50, 40, 0, 1073741828, 0, 52, 51, -1, 1, 53, 41, 0, 1073741829, 0, 55, 54, -1, 3, 56, 42, 57, 43, 58, 44, 0),
"variants": [3, 15, 1.0, 1.0, 2, 2, 2, SubResource("GDScript_xhp2a"), 1, 8, 0.5, 0.5, 0.5, 0.5, -210.0, -50.0, 210.0, 50.0, 2, 2, 2, SubResource("GDScript_25maf"), NodePath("TextInputPanel/VBoxContainer/InputField"), NodePath("TextInputPanel/VBoxContainer/TextLabel"), NodePath("TextInputPanel/VBoxContainer/ConfirmationButton"), 1, true, Color(0, 0, 0, 0.780392), 1, 15, 1.0, 1.0, 2, 2, SubResource("StyleBoxFlat_3dpjm"), 2, true, 2, SubResource("Theme_8xwp1"), "Please enter some text:", 3, 2, 2, 8, "Confirm"],
"version": 3
}

[sub_resource type="Resource" id="Resource_1qyhh"]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_5fbhy")
scene = SubResource("PackedScene_ntwai")
overrides = {}

[sub_resource type="GDScript" id="GDScript_ape8w"]
script/source = "@tool
extends DialogicLayoutLayer

## Example scene for viewing the History
## Implements most of the visual options from 1.x History mode

@export_group('Look')
@export_subgroup('Font')
@export var font_use_global_size: bool = true
@export var font_custom_size: int = 15
@export var font_use_global_fonts: bool = true
@export_file('*.ttf', '*.tres') var font_custom_normal: String = \"\"
@export_file('*.ttf', '*.tres') var font_custom_bold: String = \"\"
@export_file('*.ttf', '*.tres') var font_custom_italics: String = \"\"

@export_subgroup('Buttons')
@export var show_open_button: bool = true
@export var show_close_button: bool = true

@export_group('Settings')
@export_subgroup('Events')
@export var show_all_choices: bool = true
@export var show_join_and_leave: bool = true

@export_subgroup('Behaviour')
@export var scroll_to_bottom: bool = true
@export var show_name_colors: bool = true
@export var name_delimeter: String = \": \"

var scroll_to_bottom_flag: bool = false

@export_group('Private')
@export var HistoryItem: PackedScene = null

var history_item_theme: Theme = null

func get_show_history_button() -> Button:
	return $ShowHistory


func get_hide_history_button() -> Button:
	return $HideHistory


func get_history_box() -> ScrollContainer:
	return %HistoryBox


func get_history_log() -> VBoxContainer:
	return %HistoryLog


func _ready() -> void:
	if Engine.is_editor_hint():
		return
	DialogicUtil.autoload().History.open_requested.connect(_on_show_history_pressed)
	DialogicUtil.autoload().History.close_requested.connect(_on_hide_history_pressed)


func _apply_export_overrides() -> void:
	var history_subsystem: Node = DialogicUtil.autoload().get(&'History')
	if history_subsystem != null:
		get_show_history_button().visible = show_open_button and history_subsystem.get(&'simple_history_enabled')
	else:
		set(&'visible', false)

	history_item_theme = Theme.new()

	if font_use_global_size:
		history_item_theme.default_font_size = get_global_setting(&'font_size', font_custom_size)
	else:
		history_item_theme.default_font_size = font_custom_size

	if font_use_global_fonts and ResourceLoader.exists(get_global_setting(&'font', '') as String):
		history_item_theme.default_font = load(get_global_setting(&'font', '') as String) as Font
	elif ResourceLoader.exists(font_custom_normal):
		history_item_theme.default_font = load(font_custom_normal)

	if ResourceLoader.exists(font_custom_bold):
		history_item_theme.set_font(&'RichtTextLabel', &'bold_font', load(font_custom_bold) as Font)
	if ResourceLoader.exists(font_custom_italics):
		history_item_theme.set_font(&'RichtTextLabel', &'italics_font', load(font_custom_italics) as Font)



func _process(_delta : float) -> void:
	if Engine.is_editor_hint():
		return
	if scroll_to_bottom_flag and get_history_box().visible and get_history_log().get_child_count():
		await get_tree().process_frame
		get_history_box().ensure_control_visible(get_history_log().get_children()[-1] as Control)
		scroll_to_bottom_flag = false


func _on_show_history_pressed() -> void:
	DialogicUtil.autoload().paused = true
	show_history()


func show_history() -> void:
	for child: Node in get_history_log().get_children():
		child.queue_free()

	var history_subsystem: Node = DialogicUtil.autoload().get(&'History')
	for info: Dictionary in history_subsystem.call(&'get_simple_history'):
		var history_item : Node = HistoryItem.instantiate()
		history_item.set(&'theme', history_item_theme)
		match info.event_type:
			\"Text\":
				if info.has('character') and info['character']:
					if show_name_colors:
						history_item.call(&'load_info', info['text'], info['character']+name_delimeter, info['character_color'])
					else:
						history_item.call(&'load_info', info['text'], info['character']+name_delimeter)
				else:
					history_item.call(&'load_info', info['text'])
			\"Character\":
				if !show_join_and_leave:
					history_item.queue_free()
					continue
				history_item.call(&'load_info', '[i]'+info['text'])
			\"Choice\":
				var choices_text: String = \"\"
				if show_all_choices:
					for i : String in info['all_choices']:
						if i.ends_with('#disabled'):
							choices_text += \"-  [i](\"+i.trim_suffix('#disabled')+\")[/i]\\n\"
						elif i == info['text']:
							choices_text += \"-> [b]\"+i+\"[/b]\\n\"
						else:
							choices_text += \"-> \"+i+\"\\n\"
				else:
					choices_text += \"- [b]\"+info['text']+\"[/b]\\n\"
				history_item.call(&'load_info', choices_text)

		get_history_log().add_child(history_item)

	if scroll_to_bottom:
		scroll_to_bottom_flag = true

	get_show_history_button().hide()
	get_hide_history_button().visible = show_close_button
	get_history_box().show()


func _on_hide_history_pressed() -> void:
	DialogicUtil.autoload().paused = false
	get_history_box().hide()
	get_hide_history_button().hide()
	var history_subsystem: Node = DialogicUtil.autoload().get(&'History')
	get_show_history_button().visible = show_open_button and history_subsystem.get(&'simple_history_enabled')
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_upgjp"]
content_margin_left = 5.0
content_margin_top = 5.0
content_margin_right = 5.0
content_margin_bottom = 5.0
bg_color = Color(0.780392, 0.780392, 0.780392, 0.156863)
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="GDScript" id="GDScript_3y6ov"]
script/source = "extends Container

func get_text_box() -> RichTextLabel:
	return %TextBox


func get_name_label() -> Label:
	return %NameLabel


func get_icon() -> TextureRect:
	return %Icon


func load_info(text:String, character:String = \"\", character_color: Color =Color(), icon:Texture= null) -> void:
	get_text_box().text = text
	var name_label: Label = get_name_label()
	if character:
		name_label.text = character
		name_label.add_theme_color_override('font_color', character_color)
		name_label.show()
	else:
		name_label.hide()

	var icon_node: TextureRect = get_icon()
	if icon == null:
		icon_node.hide()
	else:
		icon_node.show()
		icon_node.texture = icon
"

[sub_resource type="PackedScene" id="PackedScene_w4tm3"]
_bundled = {
"conn_count": 0,
"conns": PackedInt32Array(),
"editable_instances": [],
"names": PackedStringArray("HistoryItem", "PanelContainer", "offset_left", "offset_top", "offset_right", "offset_bottom", "theme_override_styles/panel", "script", "HBoxContainer", "HBoxContainer", "layout_mode", "Icon", "TextureRect", "unique_name_in_owner", "custom_minimum_size", "layout_mode", "expand_mode", "stretch_mode", "NameLabel", "Label", "unique_name_in_owner", "layout_mode", "size_flags_vertical", "TextBox", "RichTextLabel", "unique_name_in_owner", "layout_mode", "size_flags_horizontal", "size_flags_vertical", "bbcode_enabled", "text", "fit_content"),
"node_count": 5,
"node_paths": [NodePath("."), NodePath("./HBoxContainer"), NodePath("./HBoxContainer"), NodePath("./HBoxContainer")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 6, 2, 0, 3, 1, 4, 2, 5, 3, 6, 4, 7, 5, 0, 1073741824, 0, 9, 8, -1, 1, 10, 6, 0, 1073741825, 0, 12, 11, -1, 5, 13, 7, 14, 8, 15, 9, 16, 10, 17, 11, 0, 1073741826, 0, 19, 18, -1, 3, 20, 12, 21, 13, 22, 14, 0, 1073741827, 0, 24, 23, -1, 7, 25, 15, 26, 16, 27, 17, 28, 18, 29, 19, 30, 20, 31, 21, 0),
"variants": [-37.0, 510.0, 1085.0, 555.0, SubResource("StyleBoxFlat_upgjp"), SubResource("GDScript_3y6ov"), 2, true, Vector2(30, 30), 2, 1, 4, true, 2, 0, true, 2, 3, 4, true, "Some tex", true],
"version": 3
}

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_1hdvb"]
content_margin_left = 10.0
content_margin_top = 10.0
content_margin_right = 10.0
content_margin_bottom = 10.0
bg_color = Color(0, 0, 0, 0.776471)
border_color = Color(0.8, 0.8, 0.8, 0)
corner_radius_top_left = 20
corner_radius_top_right = 20
corner_radius_bottom_right = 20
corner_radius_bottom_left = 20

[sub_resource type="PackedScene" id="PackedScene_bmtto"]
_bundled = {
"conn_count": 2,
"conns": PackedInt32Array(1073741829, 1073741828, 75, 74, 2, 0, 0, 1073741831, 1073741830, 77, 76, 2, 0, 0),
"editable_instances": [],
"names": PackedStringArray("ExampleHistoryScene", "Control", "layout_direction", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "grow_horizontal", "grow_vertical", "size_flags_horizontal", "size_flags_vertical", "mouse_filter", "script", "font_use_global_size", "font_custom_size", "font_use_global_fonts", "font_custom_normal", "font_custom_bold", "font_custom_italics", "HistoryItem", "disabled", "HistoryBox", "ScrollContainer", "unique_name_in_owner", "visible", "layout_mode", "anchors_preset", "anchor_right", "anchor_bottom", "offset_left", "offset_top", "offset_right", "offset_bottom", "grow_horizontal", "grow_vertical", "size_flags_vertical", "theme_override_styles/panel", "horizontal_scroll_mode", "HistoryLog", "VBoxContainer", "unique_name_in_owner", "layout_direction", "layout_mode", "size_flags_horizontal", "size_flags_vertical", "ShowHistory", "Button", "layout_mode", "anchors_preset", "anchor_left", "anchor_right", "offset_left", "offset_top", "offset_right", "offset_bottom", "grow_horizontal", "size_flags_horizontal", "size_flags_vertical", "text", "HideHistory", "Button", "visible", "layout_mode", "anchors_preset", "anchor_left", "anchor_right", "offset_left", "offset_top", "offset_right", "offset_bottom", "grow_horizontal", "size_flags_horizontal", "size_flags_vertical", "text", "_on_show_history_pressed", "pressed", "_on_hide_history_pressed", "pressed"),
"node_count": 5,
"node_paths": [NodePath("."), NodePath("./HistoryBox"), NodePath("."), NodePath("."), NodePath("."), NodePath("ShowHistory"), NodePath("."), NodePath("HideHistory")],
"nodes": PackedInt32Array(-1, -1, 1, 0, -1, 19, 2, 0, 3, 1, 4, 2, 5, 3, 6, 4, 7, 5, 8, 6, 9, 7, 10, 8, 11, 9, 12, 10, 13, 11, 14, 12, 15, 13, 16, 14, 17, 15, 18, 16, 19, 17, 20, 18, 0, 1073741824, 0, 22, 21, -1, 15, 23, 19, 24, 20, 25, 21, 26, 22, 27, 23, 28, 24, 29, 25, 30, 26, 31, 27, 32, 28, 33, 29, 34, 30, 35, 31, 36, 32, 37, 33, 0, 1073741825, 0, 39, 38, -1, 5, 40, 34, 41, 35, 42, 36, 43, 37, 44, 38, 0, 1073741826, 0, 46, 45, -1, 12, 47, 39, 48, 40, 49, 41, 50, 42, 51, 43, 52, 44, 53, 45, 54, 46, 55, 47, 56, 48, 57, 49, 58, 50, 0, 1073741827, 0, 60, 59, -1, 13, 61, 51, 62, 52, 63, 53, 64, 54, 65, 55, 66, 56, 67, 57, 68, 58, 69, 59, 70, 60, 71, 61, 72, 62, 73, 63, 0),
"variants": [1, 3, 15, 1.0, 1.0, 2, 2, 3, 3, 2, SubResource("GDScript_ape8w"), null, null, null, null, null, null, SubResource("PackedScene_w4tm3"), null, true, false, 1, 15, 1.0, 1.0, 74.0, 65.0, -74.0, -57.0, 2, 2, 3, SubResource("StyleBoxFlat_1hdvb"), 0, true, 1, 2, 3, 3, 1, 1, 1.0, 1.0, -73.0, 7.0, -9.0, 38.0, 0, 4, 4, "History", false, 1, 1, 1.0, 1.0, -123.0, 58.0, -62.0, 89.0, 0, 4, 4, "Return"],
"version": 3
}

[sub_resource type="Resource" id="Resource_bdof0"]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_5fbhy")
scene = SubResource("PackedScene_bmtto")
overrides = {}

[sub_resource type="GDScript" id="GDScript_ptej4"]
script/source = "@tool
extends Resource
class_name DialogicStyle

## A style represents a collection of layers and settings.
## A style can inherit from another style.


@export var name := \"Style\":
	get:
		if name.is_empty():
			return \"Unkown Style\"
		return name

@export var inherits: DialogicStyle = null

## Stores the layer order
@export var layer_list: Array[String] = []
## Stores the layer infos
@export var layer_info := {
	\"\" : DialogicStyleLayer.new()
}




func _init(_name := \"\") -> void:
	if not _name.is_empty():
		name = _name



#region BASE METHODS
# These methods are local, meaning they do NOT take inheritance into account.


## Returns the amount of layers (the base layer is not included).
func get_layer_count() -> int:
	return layer_list.size()


## Returns the index of the layer with [param id] in the layer list.
## Returns -1 for the base layer (id==\"\") which is not in the layer list.
func get_layer_index(id:String) -> int:
	return layer_list.find(id)


## Returns `true` if [param id] is a valid id for a layer.
func has_layer(id:String) -> bool:
	return id in layer_info or id == \"\"


## Returns `true` if [param index] is a valid index for a layer.
func has_layer_index(index:int) -> bool:
	return index < layer_list.size()


## Returns the id of the layer at [param index].
func get_layer_id_at_index(index:int) -> String:
	if index == -1:
		return \"\"
	if has_layer_index(index):
		return layer_list[index]
	return \"\"


func get_layer_info(id:String) -> Dictionary:
	var info := {\"id\": id, \"path\": \"\", \"overrides\": {}}

	if has_layer(id):
		var layer_resource: DialogicStyleLayer = layer_info[id]

		if layer_resource.scene != null:
			info.path = layer_resource.scene.resource_path
		elif id == \"\":
			info.path = DialogicUtil.get_default_layout_base().resource_path

		info.overrides = layer_resource.overrides.duplicate()

	return info

#endregion


#region MODIFICATION METHODS
# These methods modify the layers of this style.


## Returns a new layer id not yet in use.
func get_new_layer_id() -> String:
	var i := 16
	while String.num_int64(i, 16) in layer_info:
		i += 1
	return String.num_int64(i, 16)


## Adds a layer with the given scene and overrides.
## Returns the new layers id.
func add_layer(scene:String, overrides:Dictionary = {}, id:= \"##\") -> String:
	if id == \"##\":
		id = get_new_layer_id()
	layer_info[id] = DialogicStyleLayer.new(scene, overrides)
	layer_list.append(id)
	changed.emit()
	return id


## Deletes the layer with the given id.
## Deleting the base layer is not allowed.
func delete_layer(id:String) -> void:
	if not has_layer(id) or id == \"\":
		return

	layer_info.erase(id)
	layer_list.erase(id)

	changed.emit()


## Moves the layer at [param from_index] to [param to_index].
func move_layer(from_index:int, to_index:int) -> void:
	if not has_layer_index(from_index) or not has_layer_index(to_index-1):
		return

	var id := layer_list.pop_at(from_index)
	layer_list.insert(to_index, id)

	changed.emit()


## Changes the scene property of the DialogicStyleLayer resource at [param layer_id].
func set_layer_scene(layer_id:String, scene:String) -> void:
	if not has_layer(layer_id):
		return

	layer_info[layer_id].scene = load(scene)
	changed.emit()


func set_layer_overrides(layer_id:String, overrides:Dictionary) -> void:
	if not has_layer(layer_id):
		return

	layer_info[layer_id].overrides = overrides
	changed.emit()


## Changes an override of the DialogicStyleLayer resource at [param layer_id].
func set_layer_setting(layer_id:String, setting:String, value:Variant) -> void:
	if not has_layer(layer_id):
		return

	layer_info[layer_id].overrides[setting] = value
	changed.emit()


## Resets (removes) an override of the DialogicStyleLayer resource at [param layer_id].
func remove_layer_setting(layer_id:String, setting:String) -> void:
	if not has_layer(layer_id):
		return

	layer_info[layer_id].overrides.erase(setting)
	changed.emit()

#
#endregion


#region INHERITANCE METHODS
# These methods are what you should usually use to get info about this style.


## Returns `true` if this style is inheriting from another style.
func inherits_anything() -> bool:
	return inherits != null


## Returns the base style of this style.
func get_inheritance_root() -> DialogicStyle:
	if not inherits_anything():
		return self

	var style: DialogicStyle = self
	while style.inherits_anything():
		style = style.inherits

	return style


## This merges some [param layer_info] with it's param ancestors layer info.
func merge_layer_infos(layer_info:Dictionary, ancestor_info:Dictionary) -> Dictionary:
	var combined := layer_info.duplicate(true)

	combined.path = ancestor_info.path
	combined.overrides.merge(ancestor_info.overrides)

	return combined


## Returns the layer info of the layer at [param id] taking into account inherited info.
## If [param inherited_only] is `true`, the local info is not included.
func get_layer_inherited_info(id:String, inherited_only := false) -> Dictionary:
	var style := self
	var info := {\"id\": id, \"path\": \"\", \"overrides\": {}}

	if not inherited_only:
		info = get_layer_info(id)

	while style.inherits_anything():
		style = style.inherits
		info = merge_layer_infos(info, style.get_layer_info(id))

	return info


## Returns the layer list of the root style.
func get_layer_inherited_list() -> Array:
	var list := layer_list

	if inherits_anything():
		list = get_inheritance_root().layer_list

	return list


## Applies inherited info to the local layers.
## Then removes inheritance.
func realize_inheritance() -> void:
	layer_list = get_layer_inherited_list()

	var new_layer_info := {}
	for id in layer_info:
		var info := get_layer_inherited_info(id)
		new_layer_info[id] = DialogicStyleLayer.new(info.get(\"path\", \"\"), info.get(\"overrides\", {}))

	layer_info = new_layer_info
	inherits = null
	changed.emit()


#endregion

## Creates a fresh new style with the same settings.
func clone() -> DialogicStyle:
	var style := DialogicStyle.new()
	style.name = name
	style.inherits = inherits

	var base_info := get_layer_info(\"\")
	set_layer_scene(\"\", base_info.path)
	set_layer_overrides(\"\", base_info.overrides)

	for id in layer_list:
		var info := get_layer_info(id)
		style.add_layer(info.path, info.overrides, id)

	return style


## Starts preloading all the scenes used by this style.
func prepare() -> void:
	for id in layer_info:
		if layer_info[id].scene:
			ResourceLoader.load_threaded_request(layer_info[id].scene.resource_path)


#region UPDATE OLD STYLES
# TODO deprecated when going into beta

# TODO  Deprecated, only for Styles before alpha 16!
@export var base_scene: PackedScene = null
# TODO Deprecated, only for Styles before alpha 16!
@export var base_overrides := {}
# TODO Deprecated, only for Styles before alpha 16!
@export var layers: Array[DialogicStyleLayer] = []

func update_from_pre_alpha16() -> void:
	if not layers.is_empty():
		var idx := 0
		for layer in layers:
			var id := \"##\"
			if inherits_anything():
				id = get_layer_inherited_list()[idx]
			if layer.scene:
				add_layer(layer.scene.resource_path, layer.overrides, id)
			else:
				add_layer(\"\", layer.overrides, id)
			idx += 1
		layers.clear()

	if not base_scene == null:
		set_layer_scene(\"\", base_scene.resource_path)
		base_scene = null
	if not base_overrides.is_empty():
		set_layer_overrides(\"\", base_overrides)
		base_overrides.clear()


#endregion
"

[resource]
resource_local_to_scene = false
resource_name = ""
script = SubResource("GDScript_ptej4")
name = "New_File"
layer_list = Array[String](["10", "11", "12", "13", "14", "15", "16"])
layer_info = {
"": SubResource("Resource_bicms"),
"10": SubResource("Resource_nketx"),
"11": SubResource("Resource_jmvei"),
"12": SubResource("Resource_8e5ww"),
"13": SubResource("Resource_wn5tf"),
"14": SubResource("Resource_dqfod"),
"15": SubResource("Resource_1qyhh"),
"16": SubResource("Resource_bdof0")
}
base_overrides = {}
layers = Array[SubResource("GDScript_5fbhy")]([])
metadata/_latest_layer = ""
